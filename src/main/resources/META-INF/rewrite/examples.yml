# Copyright 2025 the original author or authors.
# <p>
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# <p>
# https://www.apache.org/licenses/LICENSE-2.0
# <p>
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
type: specs.openrewrite.org/v1beta/example
recipeName: org.openrewrite.java.netty.EventLoopGroupToMultiThreadIoEventLoopGroupRecipes
examples:
- description: '`EventLoopGroupToMultiThreadIoEventLoopGroupTest#replaceEpoll`'
  sources:
  - before: |
      import io.netty.channel.EventLoopGroup;
      import io.netty.channel.epoll.EpollEventLoopGroup;

      class Test {
          EventLoopGroup group1 = new EpollEventLoopGroup();
      }
    after: |
      import io.netty.channel.EventLoopGroup;
      import io.netty.channel.MultiThreadIoEventLoopGroup;
      import io.netty.channel.epoll.EpollIoHandler;

      class Test {
          EventLoopGroup group1 = new MultiThreadIoEventLoopGroup(EpollIoHandler.newFactory());
      }
    language: java
---
type: specs.openrewrite.org/v1beta/example
recipeName: org.openrewrite.netty.UpgradeNetty_4_1_to_4_2
examples:
- description: '`UpgradeNetty_4_1_to_4_2Test#changeType`'
  sources:
  - before: |
      import io.netty.buffer.ByteBuf;
      import io.netty.incubator.channel.uring.IOUring;

      class Test {
          boolean isAvailable = IOUring.isAvailable();
      }
    after: |
      import io.netty.buffer.ByteBuf;
      import io.netty.channel.uring.IoUring;

      class Test {
          boolean isAvailable = IoUring.isAvailable();
      }
    language: java
